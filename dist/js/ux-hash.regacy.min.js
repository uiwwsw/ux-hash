"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var UxHash=function(){function n(e,t){_classCallCheck(this,n),this.id=Math.random().toString(36).substr(2,9),this.querySelector=e,this.keys=t.map(function(e){return e.key}),this.colors=t.map(function(e){return e.color}),this.bgs=t.map(function(e){return e.bg}),this.wrapperElement=document.querySelector(this.querySelector),this.textareaElement=document.createElement("textarea"),this.displayElement=document.createElement("div"),this.makeStyle(),this.wrapperElement.appendChild(this.textareaElement),this.wrapperElement.appendChild(this.displayElement),this.displayElement.style.right=this.textareaElement.scrollWidth-this.textareaElement.clientWidth+"px",this.textareaElement.onkeyup=this.keyEvent.bind(this),this.textareaElement.onscroll=this.scrollEvent.bind(this)}return _createClass(n,[{key:"makeStyle",value:function(){var e="overflow: auto;overflow-x: hidden;display: block !important;height: 100%;margin: 0;padding: 1em;box-sizing: border-box;border: 0;line-height: inherit;word-spacing: inherit;color: inherit;font: inherit;resize: none;outline: none;word-break: initial;white-space: pre-wrap;";this.wrapperElement.style.position="relative",this.wrapperElement.style.fontSize="12px",this.textareaElement.setAttribute("style",e+"width: 100%;"),this.displayElement.setAttribute("style",e+"z-index:2;position: absolute;top: 0;right: 0;left: 0;overflow: hidden;color: transparent;pointer-events: none;")}},{key:"scrollEvent",value:function(){this.displayElement.scrollTop=this.textareaElement.scrollTop,this.textareaElement.scrollTop=this.displayElement.scrollTop}},{key:"mask",value:function(){var r=this,i="";return this.textareaElement.value.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").split("\n").forEach(function(e,t){i+=0===t?"":"\n",e.split(" ").forEach(function(e,t){i+=0===t?"":" ";var n=r.keys.indexOf(e[0]);i+=-1===n?e:'<span style="margin: -.1em;padding: 0 .1em;border-radius: 1em;color:'.concat(r.colors[n],";background:").concat(r.bgs[n],';">').concat(e,"</span>")})}),i+"\n\n"}},{key:"keyEvent",value:function(){this.displayElement.innerHTML=this.mask(),this.scrollEvent()}}],[{key:"keyEvent",value:function(e,t){var n=document.querySelector(e),r=n.querySelector("textarea"),i=n.querySelector("div"),a=n.querySelector("textarea").value,l=t.map(function(e){return e.key}),o=t.map(function(e){return e.color}),s=t.map(function(e){return e.bg}),c="";a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").split("\n").forEach(function(e,t){c+=0===t?"":"\n",e.split(" ").forEach(function(e,t){c+=0===t?"":" ";var n=l.indexOf(e[0]);c+=-1===n?e:'<span style="margin: -.1em;padding: 0 .1em;border-radius: 1em;color:'.concat(o[n],";background:").concat(s[n],';">').concat(e,"</span>")})}),i.scrollTop=r.scrollTop,r.scrollTop=i.scrollTop,i.innerHTML=c+"\n\n"}}]),n}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
